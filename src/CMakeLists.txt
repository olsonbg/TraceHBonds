# get all *.cpp files
file(GLOB SRC_FILES *.cpp)
ADD_EXECUTABLE(TraceHBonds ${SRC_FILES})

# Link the executable to a library.
FIND_PACKAGE( Boost REQUIRED COMPONENTS iostreams REQUIRED )
INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIRS} )
TARGET_LINK_LIBRARIES(TraceHBonds ${Boost_LIBRARIES} )

FIND_PACKAGE( Threads )
IF( Threads_FOUND )
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DPTHREADS")
	TARGET_LINK_LIBRARIES(TraceHBonds ${CMAKE_THREAD_LIBS_INIT})
ENDIF( Threads_FOUND )

FIND_PACKAGE( BZip2 )
IF( BZIP2_FOUND )
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_BZIP2")
	INCLUDE_DIRECTORIES( ${BZIP2_INCLUDE_DIR} )
	TARGET_LINK_LIBRARIES(TraceHBonds ${BZIP2_LIBRARIES} )
endif()

FIND_PACKAGE( LibLZMA )
if ( LIBLZMA_FOUND )
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_LZMA")
	INCLUDE_DIRECTORIES( ${LIBLZMA_INCLUDE_DIRS} )
	TARGET_LINK_LIBRARIES(TraceHBonds ${LIBLZMA_LIBRARIES} )
endif ( LIBLZMA_FOUND )

IF( NOT CMAKE_SYSTEM_NAME STREQUAL "Windows")
	FIND_PACKAGE( ZLIB )
	IF( ZLIB_FOUND )
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_ZLIB")
		INCLUDE_DIRECTORIES( ${ZLIB_INCLUDE_DIRS} )
		TARGET_LINK_LIBRARIES(TraceHBonds ${ZLIB_LIBRARIES} )
	ENDIF( ZLIB_FOUND )
ENDIF( NOT CMAKE_SYSTEM_NAME STREQUAL "Windows")

